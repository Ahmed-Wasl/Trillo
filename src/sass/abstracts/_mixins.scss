@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  @include transform(translate(-50%, -50%));
}
@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
}
@mixin transform($value) {
  transform: $value;
  -webkit-transform: $value;
  -moz-transform: $value;
  -ms-transform: $value;
  -o-transform: $value;
}
@mixin transition($value) {
  transition: $value;
  -webkit-transition: $value;
  -moz-transition: $value;
  -ms-transition: $value;
  -o-transition: $value;
}
@mixin hyphens($value) {
  hyphens: $value;
  -webkit-hyphens: $value;
  -moz-hyphens: $value;
  -ms-hyphens: $value;
}

@mixin media-query($breakpoint) {
  @if $breakpoint == small-phone {
    // 350px
    @media only screen and (max-width: 21.845em) {
      @content;
    }
  }
  @if $breakpoint == phone {
    // 600px
    @media only screen and (max-width: 37.5em) {
      @content;
    }
  }
  @if $breakpoint == tablet-portrait {
    // 900px
    @media only screen and (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint == tablet-landscape {
    // 1200px
    @media only screen and (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint == desktop {
    // 1800
    @media only screen and (max-width: 112.5em) {
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    }
  }
}
